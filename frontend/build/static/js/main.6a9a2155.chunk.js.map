{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/SearchModal.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","actions/orderActions.js","screens/ProfileScreen.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","SearchModal","useState","lgShow","setLgShow","keyword","setKeyword","history","useHistory","onClick","style","cursor","class","Modal","size","show","onHide","aria-labelledby","Header","closeButton","Title","Body","Form","inline","Control","name","onChange","e","target","value","className","width","placeholder","Button","variant","preventDefault","push","console","log","location","pathname","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","fixed","Container","to","Brand","color","position","left","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","removeItem","isAdmin","Footer","Row","Col","Rating","text","Product","Card","height","_id","Img","src","image","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","margin","display","Message","children","Alert","Paginate","split","Pagination","Array","keys","active","listProducts","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","search","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","ListGroup","description","countInStock","xs","disabled","length","review","createdAt","substring","onSubmit","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","listMyOrders","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","textDecoration","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","href","isDelivered","deliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6a9a2155.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n\r\n\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n} from './reducers/productReducers'\r\n\r\nimport { cartReducer } from './reducers/cartReducers'\r\n\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n} from './reducers/userReducers'\r\n\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n})\r\n\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages\r\n            }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload, }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n\r\n    CART_CLEAR_ITEMS,\r\n} from '../constants/cartConstants'\r\n\r\n\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n} from '../constants/userConstants'\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n            console.log(\"searched\");\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n                style={{width:\"80%\"}}\r\n                placeholder=\"You can search here..\"\r\n            ></Form.Control>\r\n\r\n            <Button\r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'\r\n            >\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n\r\n} from '../constants/userConstants'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Row, Col, ListGroup, Modal, Form, Button, Card } from 'react-bootstrap'\r\nimport SearchBox from './SearchBox';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchModal() {\r\n    const [lgShow, setLgShow] = useState(false);\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        setLgShow(false)\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n            console.log(\"searched\");\r\n            setKeyword('')\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n  \r\n    return (\r\n      <>\r\n        <div onClick={() => setLgShow(true)} style={{cursor:\"pointer\"}} ><i class=\"fas fa-search\"></i></div>\r\n        \r\n        <Modal\r\n          size=\"lg\"\r\n          show={lgShow}\r\n          onHide={() => setLgShow(false)}\r\n          aria-labelledby=\"example-modal-sizes-title-lg\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n              Search\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n          <Form inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n                style={{width:\"80%\"}}\r\n                placeholder=\"You can search here..\"\r\n            ></Form.Control>\r\n\r\n            <Button\r\n                type='submit'\r\n                variant='btn btn-secorndary btn-sm'\r\n                className='p-2'\r\n                // style={{textDecoration:\"none\"}}\r\n                onClick={submitHandler}\r\n            >\r\n                Search\r\n            </Button>\r\n        </Form>\r\n          </Modal.Body>\r\n          {/* <Modal.Footer>\r\n\r\n          </Modal.Footer> */}\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n  \r\nexport default SearchModal","import React, {useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\nimport SearchModal from './SearchModal'\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    // const [icon,setIcon] = useState({color:\"white\",position:\"relative\",left:\"8rem\"})\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header className=\"mb-5 pb-5\">\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect fixed=\"top\">\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>DoorSteps</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <span className=\"mx-auto\" style={{color:\"white\",position:\"relative\",left:\"3rem\"}}>\r\n                        <SearchModal />\r\n                    </span>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        {/* <SearchBox /> */}\r\n                        \r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer to='/'>\r\n                                <Nav.Link ><i className=\"fas fa-home\"></i>Home</Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                    <LinkContainer to='/login'>\r\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\r\n                                    </LinkContainer>\r\n                                )}\r\n\r\n\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenue'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                </NavDropdown>\r\n                            )}\r\n\r\n\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">Copyright &copy; DoorSteps</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Rating({ value, text, color }) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\" style={{height:\"90%\"}}>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                    </div>\r\n                </Card.Text>\r\n\r\n\r\n                <Card.Text as=\"h3\">\r\n                <span>&#8377;</span>{product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                height: '100px',\r\n                width: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({ variant, children }) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n        : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {products.map(product => (\r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image src={product.image} alt={product.name} fluid />\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{product.name} (<span>&#8377;</span>{product.price})</h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\nimport SearchBox from '../components/SearchBox'\r\n\r\n\r\nfunction HomeScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { error, loading, products, page, pages } = productList\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel /> }\r\n            { !keyword  && <h1>Latest Products</h1>}\r\n            {/* <h1>Latest Products</h1> */}\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <Row>\r\n                                {products != ''?\r\n                                \r\n                                products.map(product => (\r\n                                    \r\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product} />\r\n                                </Col>))\r\n                                :\r\n                                <div className=\"container\">\r\n                                <h2>No search results</h2> \r\n                                <h5>Please improve your search</h5>\r\n                                </div>\r\n                            }\r\n                        </Row>\r\n                        <Paginate page={page} pages={pages} keyword={keyword} />\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n            rating,\r\n            comment\r\n        }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <div>\r\n                            <Row>\r\n                                <Col lg={5} md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n\r\n\r\n                                <Col lg={4} md={6}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Price: <span>&#8377;</span>{product.price}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Description: {product.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n\r\n                                <Col lg={3} md={12}>\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Price:</Col>\r\n                                                    <Col>\r\n                                                        <strong><span>&#8377;</span>{product.price}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status:</Col>\r\n                                                    <Col>\r\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Qty</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                                style={{width:\"5vw\", height:\"120%\"}}\r\n                                                            >\r\n                                                                {\r\n\r\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className='btn-block'\r\n                                                    disabled={product.countInStock == 0}\r\n                                                    type='button'>\r\n                                                    Add to Cart\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col md={6} className=\"my-5\">\r\n                                    <h4>Reviews</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825' />\r\n                                                <p>{review.createdAt.substring(0, 10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Write a review</h4>\r\n\r\n                                            {loadingProductReview && <Loader />}\r\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor</option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Good</option>\r\n                                                            <option value='4'>4 - Very Good</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Review</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    Row,\r\n    Col,\r\n    ListGroup,\r\n    Image,\r\n    Form,\r\n    Button,\r\n    Card,\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n    const productId = match.params.id;\r\n    const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty));\r\n        }\r\n    }, [dispatch, productId, qty]);\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id));\r\n    };\r\n\r\n    const checkoutHandler = () => {\r\n        history.push(\"/login?redirect=shipping\");\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant=\"info\">\r\n                        Your cart is empty <Link to=\"/\">Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                    <ListGroup variant=\"flush\">\r\n                        {cartItems.map((item) => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={3}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3} className=\"my-auto\">\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n\r\n                                    <Col md={3} className=\"my-auto\">\r\n                                        <span>&#8377;</span>\r\n                                        {item.price}\r\n                                    </Col>\r\n\r\n                                    <Col md={2} className=\"my-auto\">\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            value={item.qty}\r\n                                            onChange={(e) =>\r\n                                                dispatch(\r\n                                                    addToCart(item.product, Number(e.target.value))\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            {[...Array(item.countInStock).keys()].map((x) => (\r\n                                                <option key={x + 1} value={x + 1}>\r\n                                                    {x + 1}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n\r\n                                    <Col md={1} className=\"my-auto\">\r\n                                        <Button\r\n                                            type=\"button\"\r\n                                            variant=\"light\"\r\n                                            onClick={() => removeFromCartHandler(item.product)}\r\n                                        >\r\n                                            <i className=\"fas fa-trash\"></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>\r\n                                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                                items\r\n                            </h2>\r\n                            <span>&#8377;</span>\r\n                            {cartItems\r\n                                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                                .toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type=\"button\"\r\n                            className=\"btn-block\"\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler}\r\n                        >\r\n                            Proceed To Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default CartScreen;\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nfunction LoginScreen({ location, history }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Login</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link\r\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Signup</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Sign In\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer >\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nfunction ProfileScreen({ history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                            <Table striped responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Date</th>\r\n                                        <th>Total</th>\r\n                                        <th>Paid</th>\r\n                                        <th>Action</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {orders.map(order => (\r\n                                        <tr key={order._id}>\r\n                                            <td>{order._id}</td>\r\n                                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                                            <td><span>&#8377;</span>{order.totalPrice}</td>\r\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/order/${order._id}`}>\r\n                                                    <Button className='btn-sm'>Details</Button>\r\n                                                </LinkContainer>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Login</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Shipping</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Payment</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Place Order</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nfunction ShippingScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n    useEffect(()=>{\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n    },[userInfo])\r\n    \r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nfunction PaymentScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if (!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n    if (!userInfo) {\r\n        history.push('/login')\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder, listMyOrders } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 500 ? 0 : 100).toFixed(2)\r\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n            dispatch(listMyOrders()) \r\n        }\r\n    }, [success, history,userInfo])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Your cart is empty\r\n                            </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                <Col md={3} className=\"my-auto\">\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col className=\"my-auto\" md={4}>\r\n                                                        <Link style={{textDecoration:\"none\"}} to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col  className=\"my-auto\">\r\n                                                        {item.qty} X <span>&#8377;</span>{item.price} = <span>&#8377;</span>{(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col><span>&#8377;</span>{cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col><span>&#8377;</span>{cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col><span>&#8377;</span>{cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col><span>&#8377;</span>{cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder, listMyOrders } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AY0tmhqZlb8Va68CydNj2QrSrVWsLl8wKedCkU9l3sOYMsq91e9Kpddqj9q7UiePMjOSF_QSjTsKh-op'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n            dispatch(listMyOrders())\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n                <div>\r\n                    <h1>Order: {order._id}</h1>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Shipping</h2>\r\n                                    <p><strong>Name: </strong> {order.user.name}</p>\r\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                                    <p>\r\n                                        <strong>Shipping: </strong>\r\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\r\n                                        {'  '}\r\n                                        {order.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                        {order.shippingAddress.country}\r\n                                    </p>\r\n\r\n                                    {order.isDelivered ? (\r\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Delivered</Message>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Payment Method</h2>\r\n                                    <p>\r\n                                        <strong>Method: </strong>\r\n                                        {order.paymentMethod}\r\n                                    </p>\r\n                                    {order.isPaid ? (\r\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Paid</Message>\r\n                                        )}\r\n\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Items</h2>\r\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                        Order is empty\r\n                            </Message> : (\r\n                                            <ListGroup variant='flush'>\r\n                                                {order.orderItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index}>\r\n                                                        <Row>\r\n                                                            <Col md={3} className=\"my-auto\">\r\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4} className=\"my-auto\">\r\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                            </Col>\r\n\r\n                                                            <Col className=\"my-auto\">\r\n                                                                {item.qty} X <span>&#8377;</span>{item.price} = <span>&#8377;</span>{(item.qty * item.price).toFixed(2)}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                            </ListGroup>\r\n\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h2>Order Summary</h2>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Items:</Col>\r\n                                            <Col><span>&#8377;</span>{order.itemsPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Shipping:</Col>\r\n                                            <Col><span>&#8377;</span>{order.shippingPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Tax:</Col>\r\n                                            <Col><span>&#8377;</span>{order.taxPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Total:</Col>\r\n                                            <Col><span>&#8377;</span>{order.totalPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n\r\n                                    {!order.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            {loadingPay && <Loader />}\r\n\r\n                                            {!sdkReady ? (\r\n                                                <Loader />\r\n                                            ) : (\r\n                                                    <PayPalButton\r\n                                                        amount={order.totalPrice}\r\n                                                        onSuccess={successPaymentHandler}\r\n                                                    />\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n                                </ListGroup>\r\n                                {loadingDeliver && <Loader />}\r\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type='button'\r\n                                            className='btn btn-block'\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark As Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nfunction UserListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>NAME</th>\r\n                                        <th>PRICE</th>\r\n                                        <th>CATEGORY</th>\r\n                                        <th>BRAND</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {products.map(product => (\r\n                                        <tr key={product._id}>\r\n                                            <td>{product._id}</td>\r\n                                            <td>{product.name}</td>\r\n                                            <td><span>&#8377;</span>{product.price}</td>\r\n                                            <td>{product.category}</td>\r\n                                            <td>{product.brand}</td>\r\n\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                    <Button variant='light' className='btn-sm'>\r\n                                                        <i className='fas fa-edit'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n\r\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                            <Paginate pages={pages} page={page} isAdmin={true} />\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter stock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td><span>&#8377;</span>{order.totalPrice}</td>\r\n\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import { Container } from 'react-bootstrap'\r\nimport { HashRouter as Router, Route } from 'react-router-dom'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport ProductScreen from './screens/ProductScreen'\r\nimport CartScreen from './screens/CartScreen'\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport RegisterScreen from './screens/RegisterScreen'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\nimport ShippingScreen from './screens/ShippingScreen'\r\nimport PaymentScreen from './screens/PaymentScreen'\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\r\nimport OrderScreen from './screens/OrderScreen'\r\nimport UserListScreen from './screens/UserListScreen'\r\nimport UserEditScreen from './screens/UserEditScreen'\r\nimport ProductListScreen from './screens/ProductListScreen'\r\nimport ProductEditScreen from './screens/ProductEditScreen'\r\nimport OrderListScreen from './screens/OrderListScreen'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className=\"py-3\">\r\n        <Container>\r\n          <Route path='/' component={HomeScreen} exact />\r\n          <Route path='/login' component={LoginScreen} />\r\n          <Route path='/register' component={RegisterScreen} />\r\n          <Route path='/profile' component={ProfileScreen} />\r\n          <Route path='/shipping' component={ShippingScreen} />\r\n          <Route path='/placeorder' component={PlaceOrderScreen} />\r\n          <Route path='/order/:id' component={OrderScreen} />\r\n          <Route path='/payment' component={PaymentScreen} />\r\n          <Route path='/product/:id' component={ProductScreen} />\r\n          <Route path='/cart/:id?' component={CartScreen} />\r\n\r\n          <Route path='/admin/userlist' component={UserListScreen} />\r\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n\r\n          <Route path='/admin/productlist' component={ProductListScreen} />\r\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\r\n\r\n          <Route path='/admin/orderlist' component={OrderListScreen} />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './index.css';\r\nimport './bootstrap.min.css'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}